"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

import environ

# ────────────────────────────────────────────────────────────────────────────────
# BASE DIR & ENVIRONMENT
# ────────────────────────────────────────────────────────────────────────────────

BASE_DIR = Path(__file__).resolve().parent.parent

# initialise environment variables
env = environ.Env(
    DEBUG=(bool, False),
    SECRET_KEY=(str, 'replace-me-in-.env'),
    DATABASE_URL=(str, f"sqlite:///{BASE_DIR / 'db.sqlite3'}"),
)
# read .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# ────────────────────────────────────────────────────────────────────────────────
# SECURITY
# ────────────────────────────────────────────────────────────────────────────────

SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG')

# Исправленная строка - убраны лишние скобки
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[any])

# ────────────────────────────────────────────────────────────────────────────────
# APPLICATION DEFINITION
# ────────────────────────────────────────────────────────────────────────────────

INSTALLED_APPS = [
    # Core Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'corsheaders',            # CORS support
    'rest_framework',         # Django REST Framework
    'rest_framework.authtoken',
    'django_filters',         # Filtering in DRF
    'drf_yasg',               # Swagger / ReDoc
    'channels',               # WebSockets via Channels

    # Your apps
    'todo',
    'users',
    'shop',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',               # must be high in chain
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Custom logging middleware
    'users.middleware.SimpleLoggerMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, 'templates') ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'
ASGI_APPLICATION = 'config.asgi.application'  # for Channels

# ────────────────────────────────────────────────────────────────────────────────
# DATABASES
# ────────────────────────────────────────────────────────────────────────────────

DATABASES = {
    'default': env.db(),  # parses DATABASE_URL
}

# ────────────────────────────────────────────────────────────────────────────────
# AUTHENTICATION & SESSIONS
# ────────────────────────────────────────────────────────────────────────────────

AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator' },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator' },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator' },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator' },
]

SESSION_COOKIE_AGE = 60 * 15  # 15 minutes

# ────────────────────────────────────────────────────────────────────────────────
# INTERNATIONALIZATION
# ────────────────────────────────────────────────────────────────────────────────

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ────────────────────────────────────────────────────────────────────────────────
# STATIC FILES
# ────────────────────────────────────────────────────────────────────────────────

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# ────────────────────────────────────────────────────────────────────────────────
# CORS
# ────────────────────────────────────────────────────────────────────────────────

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',  # React dev
    'http://localhost:5173',  # Vue dev
]

# ────────────────────────────────────────────────────────────────────────────────
# DRF CONFIGURATION
# ────────────────────────────────────────────────────────────────────────────────

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}

# ────────────────────────────────────────────────────────────────────────────────
# CHANNELS (WebSockets)
# ────────────────────────────────────────────────────────────────────────────────

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}
